{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["StyledLoader","styled","LoadingOverlay","App","useState","Loading","setLoading","snackState","setSnackState","snackMsg","setSnackMsg","lables","setLabels","data","setData","id","speed","fastedAsteroid","setFastedAsteroid","distance","closestAsteroid","setClosestAsteroid","averageSizeAst","setAverageSizeAst","startDate","setStartDate","endDate","setEndDate","state","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","className","Snackbar","open","autoHideDuration","message","onClose","action","IconButton","color","sx","p","onClick","Grid","container","item","xs","Typography","variant","component","active","spinner","text","classNamePrefix","lg","md","sm","style","textAlign","onSubmit","e","preventDefault","a","Date","b","getTime","Axios","get","then","response","dates","Object","keys","near_earth_objects","sort","aDate","bDate","newLales","map","date","split","ed","newData","d","length","AllAst","forEach","push","close_approach_data","relative_velocity","kilometers_per_hour","closeDateTime","close_approach_date_full","miss_distance","kilometers","size","estimated_diameter","estimated_diameter_max","fastedAst","reduce","Number","closestAst","catch","error","handleDateSubmit","TextField","name","inputProps","type","value","onChange","target","Button","options","title","display","fontSize","legend","position","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4145e82.chunk.js","sourcesContent":["\nimport './App.css';\nimport React, { useState } from 'react'\nimport { Typography, Grid, Button, TextField, Snackbar } from '@mui/material';\nimport { Line } from 'react-chartjs-2';\nimport Axios from 'axios';\nimport LoadingOverlay from 'react-loading-overlay';\nimport styled from 'styled-components';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nconst StyledLoader = styled(LoadingOverlay)`\n  .MyLoader_overlay {\n    background: #1da1f2;\n  }\n  &.MyLoader_wrapper--active {\n    background: #1da1f2;\n  }\n`\n\nfunction App() {\n  const [Loading, setLoading] = useState(false)\n  const [snackState, setSnackState] = useState(false)\n  const [snackMsg, setSnackMsg] = useState('')\n  const [lables, setLabels] = useState([])\n  const [data, setData] = useState([]);\n  const [fastedAsteroid, setFastedAsteroid] = useState({ id: -1, speed: -1 });\n  const [closestAsteroid, setClosestAsteroid] = useState({ id: -1, distance: -1 });\n  const [averageSizeAst , setAverageSizeAst ] = useState(-1);\n  const [startDate , setStartDate] = useState(\"2021-09-20\");\n  const [endDate , setEndDate] = useState(\"2021-09-25\");\n  const state = {\n    labels: lables,\n    datasets: [\n      {\n        label: 'Asteroid Per Day',\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: data\n      }\n    ]\n  }\n  const handleDateSubmit = (e) => {\n    e.preventDefault();\n    // const startDate = e.target[\"startDate\"].value;\n    // const endDate = e.target[\"endDate\"].value;\n\n    if(!startDate || !endDate){\n      setSnackMsg('Please select vaild dates');\n      setSnackState(true);\n      return;\n    }\n    var cc = 1000*60*60*24*6;\n    var a = new Date(startDate)\n    var b = new Date(endDate)\n    if(a.getTime() > b.getTime()){\n      setSnackMsg('End Date is old then start date, please selete valid one');\n      setSnackState(true);\n      return; \n    }\n    if(a.getTime() + cc < b.getTime() ){\n      setSnackMsg('Start and end date can be of 7 days');\n      setSnackState(true);\n      return;\n    }\n    setLoading(true);\n    Axios.get(`https://api.nasa.gov/neo/rest/v1/feed?start_date=${startDate}&end_date=${endDate}&detailed=false&api_key=DEMO_KEY`)\n      .then(function (response) {\n        let dates = Object.keys(response.data.near_earth_objects).sort((a, b) => {\n          const aDate = new Date(a);\n          const bDate = new Date(b);\n          if (aDate < bDate) {\n            return -1;\n          }\n          if (aDate > bDate) {\n            return 1;\n          }\n          return 0;\n        });\n        const newLales = dates.map(date => `${date.split(\"-\")[1]}-${date.split(\"-\")[2]}`);\n        const ed = dates.map(date => response.data.near_earth_objects[date]);\n        var newData = ed.map(d => d.length)\n        setLabels(newLales);\n        setData(newData);\n        const AllAst = [];\n        var earthObj = ed;\n        earthObj.forEach((a) => {\n\n          a.forEach((b) => {\n            AllAst.push({\n              id: b.id,\n              speed: b.close_approach_data[0].relative_velocity.kilometers_per_hour,\n              closeDateTime: b.close_approach_data[0].close_approach_date_full,\n              distance: b.close_approach_data[0].miss_distance.kilometers,\n              size :  b.estimated_diameter.kilometers.estimated_diameter_max\n            })\n          });\n        });\n        const fastedAst = AllAst.reduce((a, b) => {\n          return Number(a.speed) < Number(b.speed) ? b : a;\n        })\n        const closestAst = AllAst.reduce((a, b) => {\n          return Number(a.distance) < Number(b.distance) ? a : b;\n        })\n        const averageSizeAst = AllAst.map(a => a.size).reduce((a, b) => a + b) / AllAst.length; \n        setClosestAsteroid(closestAst);\n        setFastedAsteroid(fastedAst);\n        setAverageSizeAst(averageSizeAst);\n        setLoading(false);\n      })\n      .catch(function (error) {\n        // handle error\n        setLoading(false);\n        setSnackMsg('Request Faild')\n        setSnackState(true);\n      })\n  }\n\n  return (\n    <div className=\"App\">\n        <Snackbar\n        open={snackState}\n        autoHideDuration={6000}\n        message={snackMsg}\n        onClose={()=>{setSnackState(false)}}\n        action={\n            <IconButton\n              aria-label=\"close\"\n              color=\"inherit\"\n              sx={{ p: 0.5 }}\n              onClick={()=>{setSnackState(false)}}\n            >\n              <CloseIcon />\n            </IconButton>\n        }\n      />\n      <Grid container>\n        <Grid item xs={12}>\n          <div className=\"header\">\n            <Typography variant=\"h3\" component=\"h4\" className=\"Logo\">\n              Asteroid Neo Stats\n            </Typography>\n          </div>\n        </Grid>\n\n        <Grid item xs={12}>\n        <StyledLoader\n            active={Loading}\n            spinner\n            text='Please Wait...'\n            classNamePrefix='MyLoader_'\n            > \n          <Grid container>\n            <Grid item lg={4} md={4} sm={12} className=\"leftSidebar\">\n              <form style={{textAlign:'center'}} onSubmit={(e) => { handleDateSubmit(e) }}>\n                {/* Start Date : <br /><input name=\"startDate\" type=\"date\" /> <br /><br />\n                End Date : <br /><input name=\"endDate\" type=\"date\" /><br /><br /> */}\n                <TextField\n                  name=\"startDate\"\n                  inputProps={{\n                    type: \"date\",\n                  }}\n                  label=\"Start Date\"\n                  value={startDate}\n                  onChange={(e)=>{\n                    setStartDate(e.target.value);\n                  }}\n                />  <br /><br />\n                <TextField\n                  name=\"endDate\"\n                  inputProps={{\n                    type: \"date\",\n                  }}\n                  value={endDate}\n                  label=\"End Date\"\n                  onChange={(e)=>{\n                    setEndDate(e.target.value);\n                  }}\n                /> <br /><br />\n                <Button type=\"submit\" variant=\"outlined\"> Submit </Button>\n              </form><br /><br />\n              {fastedAsteroid ?\n                <div><Typography style={{textAlign:'center'}} variant=\"h5\" component=\"h5\">Fasted Asteroid </Typography>\n               {fastedAsteroid.id !== -1 ? <Typography style={{textAlign:'center', color: \"rgb(74 65 64)\"}} variant=\"h6\" component=\"h6\" >Id : {fastedAsteroid.id} <br/> Speed : {fastedAsteroid.speed} km/h </Typography>: <Typography style={{textAlign:'center'}}>None</Typography>}<br /><br />  </div> \n                : null}\n              {closestAsteroid ?\n                <div><Typography style={{textAlign:'center'}} variant=\"h5\" component=\"h5\" >Closest Asteroid  </Typography>\n              {closestAsteroid.id !== -1 ? <Typography style={{textAlign:'center', color: \"rgb(74 65 64)\"}} variant=\"h6\" component=\"h6\" >Id : {closestAsteroid.id} <br/> Distance : {closestAsteroid.distance} km  </Typography>: <Typography style={{textAlign:'center'}}>None</Typography>}<br /><br /> </div>\n                : null}\n              {averageSizeAst ?\n                <div><Typography style={{textAlign:'center'}} variant=\"h5\" component=\"h5\" >Average Asteroid Size </Typography>\n              {averageSizeAst !== -1 ? <Typography style={{textAlign:'center', color: \"rgb(74 65 64)\"}} variant=\"h6\" component=\"h6\" > {averageSizeAst} km</Typography> : <Typography style={{textAlign:'center'}}>None</Typography>}<br /><br /> </div>\n                : null}\n            </Grid>\n            <Grid item lg={8} md={8} sm={12} className=\"contentArea\">\n              <Line\n                data={state}\n                options={{\n                  title: {\n                    display: true,\n                    text: 'Asteroid per Day',\n                    fontSize: 20\n                  },\n                  legend: {\n                    display: true,\n                    position: 'right'\n                  }\n                }}\n              />\n            </Grid>\n          </Grid>\n          </StyledLoader>\n        </Grid>\n        <Grid item xs={12}>\n          <div className=\"footer\">\n            <Typography style={{textAlign:\"center\"}} variant=\"h5\" component=\"h6\" className=\"Logo\">\n              Asteroid Neo Stats Power by NASA’s Open <a href=\"https://api.nasa.gov/neo/?api_key=DEMO_KEY\n\">API</a> <br/><br/>\n            </Typography>\n            <Typography style={{textAlign:\"center\"}} className=\"Logo\">\n              Application developed By Mohit Swami\n            </Typography>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}